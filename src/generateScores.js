/**
 * @param {Object} jsonApplicantDataRequest - The json request object
 * @return {Object} - score for each applicant generated by applying scoring logic
 */

export const scoreAllApplicants = (jsonApplicantData) => {
  const applicants = jsonApplicantData["applicants"];

  //Format for the return array of objects for all scores
  const completedScores = { scoresForAllApplicants: [] };

  applicants.forEach((applicantObj) => {
    const finalScore = generateScore(applicantObj.attributes);
    completedScores["scoresForAllApplicants"].push({
      name: applicantObj.name,
      score: finalScore,
    });
  });

  return completedScores;
};

/**
 * @param {Object} attributes - all attributes of a single applicant
 * @return {Number} - a number between 0-1 generated by the scoring logic
 * Input is the attributes for each applicant and generates a score for them based on attributes
 */
const generateScore = (attributes) => {
  //Add up all attributes and divide by 4 to get the average
  let average = Object.values(attributes).reduce(
    (accumulator, currentValue) => accumulator + currentValue
  );
  average /= 4;

  //Divide by 10 to get the final score to be between 0-1
  const finalScore = average / 10;
  return finalScore;
};
