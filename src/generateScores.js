/**
 * @param {Object} jsonApplicantDataRequest - The json request object
 * @return {Object} - score for each applicant generated by applying scoring logic
 */

export const scoreAllApplicants = (jsonApplicantData) => {
  const applicants = jsonApplicantData["applicants"];

  //Format for the return array of objects for all scores
  const completedScores = { scoresForAllApplicants: [] };

  applicants.forEach((applicantObj) => {
    const finalScore = generateScore(applicantObj.attributes);
    completedScores["scoresForAllApplicants"].push({
      name: applicantObj.name,
      score: finalScore,
    });
  });

  return completedScores;
};

/**
 * @param {Object} attributes - all attributes of a single applicant
 * @return {Number} - a number between 0-1 generated by the scoring logic
 * Input is the attributes for each applicant and generates a score for them based on attributes
 */
const generateScore = (attributes) => {
  //Weight strength and endurance more than intelligence and spicy food tolerance
  attributes.strength = parseInt(attributes.strength) * 1.5;
  attributes.endurance = parseInt(attributes.endurance) * 1.5;
  attributes.intelligence = parseInt(attributes.intelligence) * 0.5;
  attributes.spicyFoodTolerance = parseInt(attributes.spicyFoodTolerance) * 0.5;

  let finalScore = Object.values(attributes).reduce(
    (accumulator, currentValue) => accumulator + currentValue
  );
  finalScore /= 40;

  return finalScore;
};

// Object.contains a property that all matches, make sure it
